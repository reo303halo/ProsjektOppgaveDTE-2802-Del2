@page "/registration"
@using ProsjektOppgaveDTE_2802.AuthProviders
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col-md-4">
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h4>Registration</h4>
            </div>
            <div class="card-body">
                <input type="text" class="form-control" placeholder="email" @bind="_loginViewModel.Username"/><br/>
                <input type="@_passwordFieldType" class="form-control" placeholder="password" @bind="_loginViewModel.Password"/><br/>
                <input type="@_passwordFieldType" class="form-control" placeholder="confirm password" @bind="ConfirmPassword"/><br/>
                <input type="checkbox" @onclick="TogglePasswordVisibility"> Show Password<br/>
                @if (ShowError)
                {
                    <p class="text-danger">@Error</p>
                }
            </div>
            <div class="card-footer">
                <input type="button" class="btn btn-success" value="Sign Up" @onclick="HandleRegistration"/>
            </div>
        </div>
    </div>
    <div class="col-md-4"></div>
</div>

@code {
    private readonly LoginViewModel _loginViewModel = new();
    private string _passwordFieldType = "password";
    private string ConfirmPassword { get; set; } = string.Empty;
    
    private bool ShowError { get; set; }
    private string Error { get; set; } = string.Empty;
    
    private void TogglePasswordVisibility()
    {
        _passwordFieldType = _passwordFieldType == "password" ? "text" : "password";
    }

    private async Task HandleRegistration()
    {
        ShowError = false;
        if (_loginViewModel.Password != ConfirmPassword)
        {
            ShowError = true;
            Error = "Passwords do not match.";
            return;
        }
        
        var result = await AuthenticationService.RegisterUser(_loginViewModel);

        if (result.IsSuccess)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            ShowError = true;
            Error = result.Message;
        }
    }
}