
@page "/blog/{BlogId:int}"

@using ProsjektOppgaveBlazor.data.Models;
@using Microsoft.AspNetCore.Identity
@inject HttpClient BlogHttpClient

<h3>Edit blog</h3>

@if (blog == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-3">
            <EditForm Model="@blog" OnValidSubmit="Save">
                <DataAnnotationsValidator/>
                <div class="form-group">
                    <div>
                        <label for="Name">Blog Name:</label>
                        <InputText class="form-control" @bind-Value="blog.Name"/>
                        <ValidationMessage For="@(()=>blog.Name)"/>
                    </div>
                    <div class="form-check form-switch">
                        <label for="Status">Allow post and comments</label>
                        <InputCheckbox class="form-check-input" @bind-Value="Status"/>
                        <ValidationMessage For="@(()=>blog.Status)" />
                    </div>
                    @*@if (blog.BlogTags != null)
                    {
                        <div>
                            <label for="Tags">Tags:</label>
                            <textarea class="form-control" readonly>@showTags()</textarea>

                        </div>
                    }*@
                        <button class="btn btn-primary" type="submit">Save</button>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                </div>
            </EditForm>
        </div>
    </div>
}


@code {
    [Parameter]
    public int BlogId { get; set; }

    private bool Status
    {
        get
        {
            if (blog.Status != 1)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        set
        {
            if (!value)
            {
                blog.Status = 0;
            }
            else
            {
                blog.Status = 1;
            }
        }
    }

    @*string showTags()
    {
        string tags = "";
        int length = blog.BlogTags.Count();
        int index = 0;
        foreach (var tag in blog.BlogTags)
        {
            if (length > 0)
            {
                tags += tag + ", ";
                index += 1;
            }
            else
            {
                tags += tag;
            }


        }
        return tags;
    }*@

    private Blog blog;
    protected override async Task OnInitializedAsync()
    {
        blog = await BlogHttpClient.GetFromJsonAsync<Blog>($"https://localhost:7022/api/Blog/{BlogId}");
    }

    private async Task Save()
    {
        var response = await BlogHttpClient.PutAsJsonAsync($"https://localhost:7022/api/Blog/{BlogId}", blog);
    }

}