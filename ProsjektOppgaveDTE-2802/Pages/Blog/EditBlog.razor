@page "/blog/{BlogId:int}"

<h3>Edit blog</h3>

@if (_blog == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-3">
            <EditForm Model="@_blog" OnValidSubmit="Save">
                <DataAnnotationsValidator/>
                <div class="form-group">
                    <div>
                        <label id="Name">Blog Name:</label>
                        <InputText class="form-control" @bind-Value="_blog.Name"/>
                        <ValidationMessage For="@(()=>_blog.Name)"/>
                    </div>
                    <div class="form-check form-switch">
                        <label id="Status">Allow post and comments</label>
                        <InputCheckbox class="form-check-input" @bind-Value="Status"/>
                        <ValidationMessage For="@(()=>_blog.Status)" />
                    </div>
                        <button class="btn btn-primary" type="submit">Save</button>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                </div>
            </EditForm>
        </div>
    </div>
}


@code {
    [Parameter]
    public int BlogId { get; set; }

    private bool Status
    {
        get => _blog.Status == 1;
        set => _blog.Status = value ? 1 : 0;
    }

    private BlogViewModel? _blog;
    protected override async Task OnInitializedAsync()
    {
        _blog = await HttpClient.GetFromJsonAsync<BlogViewModel>($"/api/Blog/{BlogId}");
    }

    private async Task Save()
    {
        await HttpClient.PutAsJsonAsync($"/api/Blog/{BlogId}", _blog);
        NavigationManager.NavigateTo($"/blogs", true);
    }
}