@page "/comments/{PostId}"
@inject IJSRuntime JsRuntime

<h3>Comments</h3>

@if (_comments == null) 
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table" >
    <thead>
    <tr>
        <th>Text</th>
        <th>Owner</th>
    </tr>
    </thead>
    <tbody>
            @foreach (var comment in _comments)
    {
        <tr>
            <td>@comment.Text</td>
            <td>@comment.Owner.Email</td>
            <td><a class="btn btn-secondary" href="comment/@comment.CommentId">Edit</a></td>
            <td><a class="btn btn-danger" @onclick="@(_ =>ConfirmDelete(comment.CommentId))">Delete</a></td>
        </tr>
    }
    </tbody>
    </table>
}

<a class="btn btn-primary" href="comment/create/@PostId">Create Comment</a>

@code {
    [Parameter]
    public string? PostId { get; set; }
    private Comment[]? _comments;

    protected override async Task OnInitializedAsync()
    {
        _comments = await HttpClient.GetFromJsonAsync<Comment[]>($"/api/Comment?postId={PostId}");
    }

    private async Task DeleteComment(int id)
    {
        var response = await HttpClient.DeleteAsync($"/api/Comment/{id}");
        NavigationManager.NavigateTo($"/comments/{PostId}", true);
    }
    
    private async Task ConfirmDelete(int id)
    {
        var confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this post?");
        if (confirmed)
        {
            await DeleteComment(id);
        }
    }
}
